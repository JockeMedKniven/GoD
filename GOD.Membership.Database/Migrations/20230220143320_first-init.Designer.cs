// <auto-generated />
using System;
using GOD.Membership.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GOD.Membership.Database.Migrations
{
    [DbContext(typeof(GODContext))]
    [Migration("20230220143320_first-init")]
    partial class firstinit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GOD.Membership.Database.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2024)
                        .HasColumnType("nvarchar(2024)");

                    b.Property<bool>("Free")
                        .HasColumnType("bit");

                    b.Property<string>("GameUrl")
                        .HasMaxLength(2024)
                        .HasColumnType("nvarchar(2024)");

                    b.Property<int>("HowLongToBeat")
                        .HasColumnType("int");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Released")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GOD.Membership.Database.Entities.GameGenre", b =>
                {
                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.HasKey("GameID", "GenreID");

                    b.HasIndex("GenreID");

                    b.ToTable("GameGenres", (string)null);
                });

            modelBuilder.Entity("GOD.Membership.Database.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("GOD.Membership.Database.Entities.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("GOD.Membership.Database.Entities.SimilarGame", b =>
                {
                    b.Property<int>("ParentGameId")
                        .HasColumnType("int");

                    b.Property<int>("SimiliarGameId")
                        .HasColumnType("int");

                    b.Property<int>("SimilarGameId")
                        .HasColumnType("int");

                    b.HasKey("ParentGameId", "SimiliarGameId");

                    b.HasIndex("SimilarGameId");

                    b.ToTable("Sims");
                });

            modelBuilder.Entity("GOD.Membership.Database.Entities.Game", b =>
                {
                    b.HasOne("GOD.Membership.Database.Entities.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("GOD.Membership.Database.Entities.GameGenre", b =>
                {
                    b.HasOne("GOD.Membership.Database.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GOD.Membership.Database.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("GOD.Membership.Database.Entities.SimilarGame", b =>
                {
                    b.HasOne("GOD.Membership.Database.Entities.Game", "Game")
                        .WithMany("SimilarGames")
                        .HasForeignKey("ParentGameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GOD.Membership.Database.Entities.Game", "Similar")
                        .WithMany()
                        .HasForeignKey("SimilarGameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Similar");
                });

            modelBuilder.Entity("GOD.Membership.Database.Entities.Game", b =>
                {
                    b.Navigation("SimilarGames");
                });

            modelBuilder.Entity("GOD.Membership.Database.Entities.Publisher", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
